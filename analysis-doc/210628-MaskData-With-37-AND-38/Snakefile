# GRCh37 mask -------------------------------------------------------------

rule msk_37mask_to38:
    input:
        bed = "../../resources/genome-masks/20140520.strict_mask.autosomes.bed",
        chain_file = "../../resources/GRCh38-genome-liftOverToGRCh38/hg19ToHg38.over.chain.gz"
    output:
        "data/GRCh37-mask-LiftedtoGRCh38.bed",
        "data/GRCh37-mask-LiftedtoGRCh38.bed.unmap"
    shell:
        """
        CrossMap.py bed {input.chain_file} {input.bed} {output[0]}
        """


rule msk_get_mask_for_chromosome37:
    """
    I extract the data for a single chromosome.
    My vcf file has the format XX for chromosome name (e.g. 22)
    and the bed file, with the mask, has the format chrXX.
    Here, I will change the format from chrXX -> XX.
    """
    input:
        "data/GRCh37-mask-LiftedtoGRCh38.bed"
    output: "data/masks/GRCh37-chr{chrn}.bed"
    params:
        chrn = "{chrn}"

    shell:
        """
        grep '^chr{params.chrn}' {input} |\
        	sed 's/^chr//g' >{output}
        """


rule msk_apply_mask37:
	input:
		vcf = "../../results/data/210305-merged-with-1TGP/1TGP_and_50MXB-chr22-snps-vep-GRCh38.vcf.gz",
        index = "../../results/data/210305-merged-with-1TGP/1TGP_and_50MXB-chr22-snps-vep-GRCh38.vcf.gz.tbi",
		mask = "data/masks/GRCh37-chr{chrn}.bed"
	output:
		vcf = "data/vcfs/1TGP_and_50MXB-chr{chrn}-37msk.vcf.gz",
		index = "data/vcfs/1TGP_and_50MXB-chr{chrn}-37msk.vcf.gz.tbi",
	shell:
		"""
		bcftools view -R {input.mask} {input.vcf} -Oz -o {output.vcf}
        bcftools index {output.vcf} --tbi
		"""

# GRCh38 mask -------------------------------------------------------------

rule msk_get_mask_for_chromosome38:
    """
    I extract the data for a single chromosome.
    My vcf file has the format XX for chromosome name (e.g. 22)
    and the bed file, with the mask, has the format chrXX.
    Here, I will change the format from chrXX -> XX.
    """
    input:
        "../../resources/genome-masks/20160622.allChr.mask.bed"
    output: "data/masks/GRCh38-chr{chrn}.bed"
    params:
        chrn = "{chrn}"

    shell:
        """
        grep '^chr{params.chrn}' {input} |\
        	sed 's/^chr//g' >{output}
        """


rule msk_apply_mask38:
	input:
		vcf = "data/vcfs/1TGP_and_50MXB-chr{chrn}-37msk.vcf.gz",
        index = "data/vcfs/1TGP_and_50MXB-chr{chrn}-37msk.vcf.gz.tbi",
		mask = "data/masks/GRCh38-chr{chrn}.bed"
	output:
		vcf = "data/vcfs/1TGP_and_50MXB-chr{chrn}-37and38msk.vcf.gz",
		index = "data/vcfs/1TGP_and_50MXB-chr{chrn}-37and38msk.vcf.gz.tbi",
	shell:
		"""
		bcftools view -R {input.mask} {input.vcf} -Oz -o {output.vcf}
        bcftools index {output.vcf} --tbi
		"""



def get_vcf_for_spectume(wildcards):
    """
    gets the vcf bassed on wilcard.
    """
    path_to_vcfs_given_mask = {
            "unmasked": "../../results/data/210305-merged-with-1TGP/1TGP_and_50MXB-chr{chrn}-snps-vep-GRCh38.vcf.gz",
            "37": "data/vcfs/1TGP_and_50MXB-chr{chrn}-37msk.vcf.gz",
            "37and38": "data/vcfs/1TGP_and_50MXB-chr{chrn}-37and38msk.vcf.gz"
        }
    return path_to_vcfs_given_mask[wildcards.mask]


rule compute_joint_sfs:
    input:
        get_vcf_for_spectume,
        aa_data = "../210506-AncestralAlleleData/data/aa-chr{chrn}.csv"
    output:
        "results/joint-sfs-chr{chrn}-mask-{mask}-MXL-MXB.csv",
        "results/joint-sfs-chr{chrn}-mask-{mask}-MXL-IBS.csv"
    shell:
        """
        python scripts/compute_jointsfs.py {input[0]} {input[1]} ../../ MXL-MXB {output[0]}
        python scripts/compute_jointsfs.py {input[0]} {input[1]} ../../ MXL-IBS {output[1]}
        """


rule all:
    input:
        expand("results/joint-sfs-chr22-mask-{mask}-MXL-MXB.csv", mask=['unmasked', '37', '37and38'])
