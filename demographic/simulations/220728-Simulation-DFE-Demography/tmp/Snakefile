SIM_IDS = list(range(1, 26))

RANDOM_SEEDS = list(range(1, 20))


rule compute_sfs:
    input:
        sim = 'results/sim-{simid}-pop.bin',
        path_to_samples = '../../../data/220404-SimulationData/data/samples/',
        path_to_genetic_maps = '../../../../resources/genetic-maps/',
        demes_graph = '../../220422-fwdpy11-initial-test/ADMIXTURE-MXL.yml'
    output:
        'results/sfs/sf-{simid}-seed{random_seed}.csv'
    params:
        random_seed = '{random_seed}'
    shell:
        '''
        python scripts/compute-sfs.py {input.sim} \
            {output} {input.path_to_samples} \
            {input.path_to_genetic_maps} {input.demes_graph} {params.random_seed}
        '''


rule aggregate_sfs:
    input:
       expand('results/sfs/sf-{simid}-seed{random_seed}.csv', simid = SIM_IDS, random_seed = RANDOM_SEEDS)
    output:
        'results/all-SFSs.csv'
    shell:
        '''
        python scripts/combine_sfs.py {input} {output}
        '''

