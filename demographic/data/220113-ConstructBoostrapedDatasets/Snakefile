## -> -> -> -> -> -> -> -> -> -> -> ->
## HELPER FUNCTIONS AND GLOBAL BARS
## -> -> -> -> -> -> -> -> -> -> -> ->
CHROM = list(range(1, 23))
N_BOOSTRAPS = 288

# These spectrums are empty for some categories (i.e. there are not variants there)
# they will be excluded.
BOOSTRAPs_TO_DROP = [
	12,
	13,
	14,
	56,
	159,
	160,
	209,
	217,
	220,
	221,
	231,
	270,
	279,
	284
]
BOOSTRAPS = list(range(1, N_BOOSTRAPS + 1))
for x in BOOSTRAPs_TO_DROP: BOOSTRAPS.remove(x)


CATEGORIES = {
    'synonymous': 'synonymous_variant',
    'missense': 'missense_variant',
	'lof': 'stop_gained,stop_lost,start_lost',
    'intergenic': 'intergenic_variant',
    'intronic': 'intron_variant'
}


def vep_get_consequence_SO_term(wildcards):
    """
    The SO term is use to annotate the variant consequence.
    See: https://m.ensembl.org/info/genome/variation/prediction/predicted_data.html
    """
    return CATEGORIES[wildcards.varcat]


rule all_spectrums:
    input:
        expand('data/jSFS/spectrums/spectrum_chunk_{i}_cat_{varcat}.pkl.gz', i=BOOSTRAPS, varcat=CATEGORIES.keys())


## -> -> -> -> -> -> -> -> -> -> -> ->
## RULES
## -> -> -> -> -> -> -> -> -> -> -> ->
include: 'rules/Define-Boostraped-Regions.smk'
include: 'rules/BoostrapedJointSpectrums.smk'

